{"version":3,"names":[],"mappings":"","sources":["scripts.js"],"sourcesContent":["const $ = document.querySelector.bind(document);\r\nconst $$ = document.querySelectorAll.bind(document);\r\n\r\n/**\r\n * Hàm tải template\r\n *\r\n * Cách dùng:\r\n * <div id=\"parent\"></div>\r\n * <script>\r\n *  load(\"#parent\", \"./path-to-template.html\");\r\n * </script>\r\n */\r\n\r\n/**\r\n * Hàm kiểm tra một phần tử\r\n * có bị ẩn bởi display: none không\r\n */\r\nfunction isHidden(element) {\r\n  if (!element) return true;\r\n\r\n  if (window.getComputedStyle(element).display === \"none\") {\r\n    return true;\r\n  }\r\n\r\n  let parent = element.parentElement;\r\n  while (parent) {\r\n    if (window.getComputedStyle(parent).display === \"none\") {\r\n      return true;\r\n    }\r\n    parent = parent.parentElement;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Hàm buộc một hành động phải đợi\r\n * sau một khoảng thời gian mới được thực thi\r\n */\r\nfunction debounce(func, timeout = 300) {\r\n  let timer;\r\n  return (...args) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      func.apply(this, args);\r\n    }, timeout);\r\n  };\r\n}\r\n\r\n/**\r\n * Hàm tính toán vị trí arrow cho dropdown\r\n *\r\n * Cách dùng:\r\n * 1. Thêm class \"js-dropdown-list\" vào thẻ ul cấp 1\r\n * 2. CSS \"left\" cho arrow qua biến \"--arrow-left-pos\"\r\n */\r\nconst calArrowPos = debounce(() => {\r\n  if (isHidden($(\".js-dropdown-list\"))) return;\r\n\r\n  const items = $$(\".js-dropdown-list > li\");\r\n\r\n  items.forEach((item) => {\r\n    const arrowPos = item.offsetLeft + item.offsetWidth / 2;\r\n    item.style.setProperty(\"--arrow-left-pos\", `${arrowPos}px`);\r\n  });\r\n});\r\n\r\n// Tính toán lại vị trí arrow khi resize trình duyệt\r\nwindow.addEventListener(\"resize\", calArrowPos);\r\n\r\n// Tính toán lại vị trí arrow sau khi tải template\r\nwindow.addEventListener(\"DOMContentLoaded\", calArrowPos);\r\n\r\nfunction includeHTML() {\r\n  var z, i, elmnt, file, xhttp;\r\n  /* Loop through a collection of all HTML elements: */\r\n  z = document.getElementsByTagName(\"*\");\r\n  for (i = 0; i < z.length; i++) {\r\n    elmnt = z[i];\r\n    /*search for elements with a certain atrribute:*/\r\n    file = elmnt.getAttribute(\"w3-include-html\");\r\n    if (file) {\r\n      /* Make an HTTP request using the attribute value as the file name: */\r\n      xhttp = new XMLHttpRequest();\r\n      xhttp.onreadystatechange = function () {\r\n        if (this.readyState == 4) {\r\n          if (this.status == 200) {\r\n            console.log(this.responseText);\r\n            elmnt.innerHTML = this.responseText;\r\n          }\r\n          if (this.status == 404) {\r\n            elmnt.innerHTML = \"Page not found.\";\r\n          }\r\n          /* Remove the attribute, and call this function once more: */\r\n          elmnt.removeAttribute(\"w3-include-html\");\r\n          includeHTML();\r\n        }\r\n      };\r\n      xhttp.open(\"GET\", file, true);\r\n      xhttp.send();\r\n      /* Exit the function: */\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nincludeHTML();\r\n/**\r\n * Giữ active menu khi hover\r\n *\r\n * Cách dùng:\r\n * 1. Thêm class \"js-menu-list\" vào thẻ ul menu chính\r\n * 2. Thêm class \"js-dropdown\" vào class \"dropdown\" hiện tại\r\n *  nếu muốn reset lại item active khi ẩn menu\r\n */\r\nwindow.addEventListener(\"DOMContentLoaded\", handleActiveMenu);\r\n\r\nfunction handleActiveMenu() {\r\n    const dropdowns = $$(\".js-dropdown\");\r\n    const menus = $$(\".js-menu-list\");\r\n    const activeClass = \"menu-column-item-active\";\r\n\r\n    const removeActive = (menu) => {\r\n        menu.querySelector(`.${activeClass}`)?.classList.remove(activeClass);\r\n    };\r\n\r\n    const init = () => {\r\n        menus.forEach((menu) => {\r\n            const items = menu.children;\r\n            if (!items.length) return;\r\n\r\n            removeActive(menu);\r\n            if (window.innerWidth > 991)\r\n            items[0].classList.add(activeClass);\r\n\r\n            Array.from(items).forEach((item) => {\r\n                item.onmouseenter = () => {\r\n                    if (window.innerWidth <= 991) return;\r\n                    removeActive(menu);\r\n                    item.classList.add(activeClass);\r\n                };\r\n                item.onclick = () => {\r\n                  if (window.innerWidth > 991) return;\r\n                  removeActive(menu);\r\n                  item.classList.add(activeClass);\r\n                  item.scrollIntoView();\r\n              };\r\n            });\r\n        });\r\n    };\r\n\r\n    init();\r\n\r\n    dropdowns.forEach((dropdown) => {\r\n        dropdown.onmouseleave = () => init();\r\n    });\r\n}\r\n/**\r\n * JS toggle\r\n *\r\n * Cách dùng:\r\n * <button class=\"js-toggle\" toggle-target=\"#box\">Click</button>\r\n * <div id=\"box\">Content show/hide</div>\r\n */\r\nwindow.addEventListener(\"DOMContentLoaded\", initJsToggle);\r\n\r\nfunction initJsToggle() {\r\n    $$(\".js-toggle\").forEach((button) => {\r\n        const target = button.getAttribute(\"toggle-target\");\r\n        if (!target) {\r\n            document.body.innerText = `Cần thêm toggle-target cho: ${button.outerHTML}`;\r\n        }\r\n        button.onclick = (e) => {\r\n            e.preventDefault();\r\n            if (!$(target)) {\r\n                return (document.body.innerText = `Không tìm thấy phần tử \"${target}\"`);\r\n            }\r\n            const isHidden = $(target).classList.contains(\"hide\");\r\n\r\n            requestAnimationFrame(() => {\r\n                $(target).classList.toggle(\"hide\", !isHidden);\r\n                $(target).classList.toggle(\"show\", isHidden);\r\n            });\r\n        };\r\n        document.onclick = function (e) {\r\n          if (!e.target.closest(target)) {\r\n              const isHidden = $(target).classList.contains(\"hide\");\r\n              if (!isHidden) {\r\n                  button.click();\r\n              }\r\n          }\r\n      };\r\n      \r\n    });\r\n}\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n  const links = $$(\".js-dropdown-list > li > a\");\r\n\r\n  links.forEach((link) => {\r\n      link.onclick = () => {\r\n          if (window.innerWidth > 991) return;\r\n          const item = link.closest(\"li\");\r\n          item.classList.toggle(\"navbar-item-active\");\r\n      };\r\n  });\r\n});\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n  const tabsSelector = \"pro-tab-item\";\r\n  const contentsSelector = \"pro-tab-content\";\r\n\r\n  const tabActive = `${tabsSelector}-current`;\r\n  const contentActive = `${contentsSelector}-current`;\r\n\r\n  const tabContainers = $$(\".js-tabs\");\r\n  tabContainers.forEach((tabContainer) => {\r\n      const tabs = tabContainer.querySelectorAll(`.${tabsSelector}`);\r\n      const contents = tabContainer.querySelectorAll(`.${contentsSelector}`);\r\n      tabs.forEach((tab, index) => {\r\n          tab.onclick = () => {\r\n              tabContainer.querySelector(`.${tabActive}`)?.classList.remove(tabActive);\r\n              tabContainer.querySelector(`.${contentActive}`)?.classList.remove(contentActive);\r\n              tab.classList.add(tabActive);\r\n              contents[index].classList.add(contentActive);\r\n          };\r\n      });\r\n  });\r\n});\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n  const switchBtn = document.querySelector(\"#switch-theme-btn\");\r\n  if (switchBtn) {\r\n      switchBtn.onclick = function () {\r\n          const isDark = localStorage.dark === \"true\";\r\n          document.querySelector(\"html\").classList.toggle(\"dark\", !isDark);\r\n          localStorage.setItem(\"dark\", !isDark);\r\n          switchBtn.querySelector(\"span\").textContent = isDark ? \"Dark mode\" : \"Light mode\";\r\n      };\r\n      const isDark = localStorage.dark === \"true\";\r\n      switchBtn.querySelector(\"span\").textContent = isDark ? \"Light mode\" : \"Dark mode\";\r\n  }\r\n});\r\n\r\nconst isDark = localStorage.dark === \"true\";\r\ndocument.querySelector(\"html\").classList.toggle(\"dark\", isDark);\r\n\r\n\r\n"],"file":"scripts.js"}